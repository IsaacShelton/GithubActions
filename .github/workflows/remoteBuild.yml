name: Remote Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release
  CTEST_OUTPUT_ON_FAILURE: On
  IS_GITHUB_WORKFLOW: On

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    defaults:
      run:
        working-directory: ${{github.workspace}}
    steps:
      - uses: actions/checkout@v3
      - name: Get latest CMake and Ninja
        uses: lukka/get-cmake@latest
      - name: Configure
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -G Ninja
      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      - name: Archive Build Result
        uses: a7ul/tar-action@v1.1.0
        with:
          command: c
          files: build
          outPath: build-${{ matrix.os }}.tar.gz
      - name: Archive E2E Infrastructure
        uses: a7ul/tar-action@v1.1.0
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          command: c
          cwd: tests
          files: e2e
          outPath: e2e.tar.gz
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.os }}-archive
          path: build-${{ matrix.os }}.tar.gz
      - name: Upload E2E Testing Infrastructure Artifact
        uses: actions/upload-artifact@v2
        if: ${{ matrix.os == 'ubuntu-latest' }}
        with:
          name: e2e-archive
          path: e2e.tar.gz
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifact (ubuntu-latest)
        uses: actions/download-artifact@v2
        with:
          name: build-ubuntu-latest-archive
      - name: Pre-Unpack
        run: mkdir windows-latest macos-latest ubuntu-latest
      - name: Unpack Ubuntu Build
        uses: a7ul/tar-action@v1.1.0
        with:
          command: x
          cwd: ubuntu-latest
          files: build-ubuntu-latest.tar.gz
      - name: Stage
        run: |
          mkdir stage
          mv ubuntu-latest/build/HelloWorld stage/x86_64-Ubuntu-HelloWorld-3
      - name: Release
        uses: IsaacShelton/update-release@HEAD
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release: Nightly
          files: >
            stage/x86_64-Ubuntu-HelloWorld-3
  